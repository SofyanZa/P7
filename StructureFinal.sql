-- MySQL Script generated by MySQL Workbench
-- Wed May  4 16:26:41 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema OCPizza
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema OCPizza
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `OCPizza` DEFAULT CHARACTER SET utf8mb4 ;
USE `OCPizza` ;

-- -----------------------------------------------------
-- Table `OCPizza`.`Authentification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Authentification` (
  `authentification_id` INT NOT NULL,
  `username` VARCHAR(16) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`authentification_id`));


-- -----------------------------------------------------
-- Table `OCPizza`.`Utilisateur`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Utilisateur` (
  `utilisateur_id` INT NOT NULL AUTO_INCREMENT,
  `authentification_id` INT NOT NULL,
  `mail` VARCHAR(255) NOT NULL,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `adressPostal` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`utilisateur_id`, `authentification_id`),
  INDEX `fk_Utilisateur_Authentification1_idx` (`authentification_id` ASC) VISIBLE,
  CONSTRAINT `fk_Utilisateur_Authentification1`
    FOREIGN KEY (`authentification_id`)
    REFERENCES `OCPizza`.`Authentification` (`authentification_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `OCPizza`.`Client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Client` (
  `client_id` INT NOT NULL AUTO_INCREMENT,
  `utilisateur_id` INT NOT NULL,
  PRIMARY KEY (`client_id`, `utilisateur_id`),
  INDEX `fk_Client_Utilisateur1_idx` (`utilisateur_id` ASC) VISIBLE,
  CONSTRAINT `fk_Client_Utilisateur1`
    FOREIGN KEY (`utilisateur_id`)
    REFERENCES `OCPizza`.`Utilisateur` (`utilisateur_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `OCPizza`.`Adresse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Adresse` (
  `adress_id` INT NOT NULL AUTO_INCREMENT,
  `streetName` VARCHAR(255) NOT NULL,
  `streetNumbert` INT NOT NULL,
  `codePostal` INT NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`adress_id`));


-- -----------------------------------------------------
-- Table `OCPizza`.`Role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Role` (
  `role_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`role_id`));


-- -----------------------------------------------------
-- Table `OCPizza`.`Employes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Employes` (
  `employe_id` INT NOT NULL AUTO_INCREMENT,
  `role_id` INT NOT NULL,
  `utilisateur_id` INT NOT NULL,
  PRIMARY KEY (`employe_id`, `role_id`, `utilisateur_id`),
  INDEX `fk_Employes_Role1_idx` (`role_id` ASC) VISIBLE,
  INDEX `fk_Employes_Utilisateur1_idx` (`utilisateur_id` ASC) VISIBLE,
  CONSTRAINT `fk_Employes_Role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `OCPizza`.`Role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Employes_Utilisateur1`
    FOREIGN KEY (`utilisateur_id`)
    REFERENCES `OCPizza`.`Utilisateur` (`utilisateur_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `OCPizza`.`Commande`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Commande` (
  `command_id` INT NOT NULL AUTO_INCREMENT,
  `statusCommand` VARCHAR(255) NOT NULL,
  `date` DATE NOT NULL,
  `payed` TINYINT NOT NULL,
  `comments` VARCHAR(255) NULL,
  `client_id` INT NOT NULL,
  `employe_id` INT NOT NULL,
  PRIMARY KEY (`command_id`),
  INDEX `fk_Commande_Client1_idx` (`client_id` ASC) VISIBLE,
  INDEX `fk_Commande_Employes1_idx` (`employe_id` ASC) VISIBLE,
  CONSTRAINT `fk_Commande_Client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `OCPizza`.`Client` (`client_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Commande_Employes1`
    FOREIGN KEY (`employe_id`)
    REFERENCES `OCPizza`.`Employes` (`employe_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `OCPizza`.`Recette`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Recette` (
  `recette_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`recette_id`));


-- -----------------------------------------------------
-- Table `OCPizza`.`Pizza`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Pizza` (
  `pizza_id` INT NOT NULL,
  `recette_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `price` DOUBLE NOT NULL,
  `picture` VARCHAR(255) NULL,
  `size` INT NOT NULL,
  PRIMARY KEY (`pizza_id`, `recette_id`),
  INDEX `fk_Pizza_Recette1_idx` (`recette_id` ASC) VISIBLE,
  CONSTRAINT `fk_Pizza_Recette1`
    FOREIGN KEY (`recette_id`)
    REFERENCES `OCPizza`.`Recette` (`recette_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `OCPizza`.`Ingrédients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Ingrédients` (
  `ingredients_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `stock` INT NOT NULL,
  PRIMARY KEY (`ingredients_id`));


-- -----------------------------------------------------
-- Table `OCPizza`.`Pizzeria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Pizzeria` (
  `pizzeria_id` INT NOT NULL,
  `adress_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `open` TINYINT NOT NULL,
  PRIMARY KEY (`pizzeria_id`),
  INDEX `fk_Pizzeria_Adresse1_idx` (`adress_id` ASC) VISIBLE,
  CONSTRAINT `fk_Pizzeria_Adresse1`
    FOREIGN KEY (`adress_id`)
    REFERENCES `OCPizza`.`Adresse` (`adress_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `OCPizza`.`Pizza_Commande`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Pizza_Commande` (
  `pizza_id` INT NOT NULL,
  `command_id` INT NOT NULL,
  INDEX `fk_Pizza_has_Commande_Commande1_idx` (`command_id` ASC) VISIBLE,
  INDEX `fk_Pizza_has_Commande_Pizza1_idx` (`pizza_id` ASC) VISIBLE,
  PRIMARY KEY (`pizza_id`, `command_id`),
  CONSTRAINT `fk_Pizza_has_Commande_Pizza1`
    FOREIGN KEY (`pizza_id`)
    REFERENCES `OCPizza`.`Pizza` (`pizza_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pizza_has_Commande_Commande1`
    FOREIGN KEY (`command_id`)
    REFERENCES `OCPizza`.`Commande` (`command_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `OCPizza`.`Ingrédients_Recette`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Ingrédients_Recette` (
  `recette_id` INT NOT NULL,
  `ingredients_id` INT NOT NULL,
  PRIMARY KEY (`recette_id`, `ingredients_id`),
  INDEX `fk_Ingrédients_has_Recette_Recette1_idx` (`recette_id` ASC) VISIBLE,
  INDEX `fk_Ingrédients_has_Recette_Ingrédients1_idx` (`ingredients_id` ASC) VISIBLE,
  CONSTRAINT `fk_Ingrédients_has_Recette_Ingrédients1`
    FOREIGN KEY (`ingredients_id`)
    REFERENCES `OCPizza`.`Ingrédients` (`ingredients_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Ingrédients_has_Recette_Recette1`
    FOREIGN KEY (`recette_id`)
    REFERENCES `OCPizza`.`Recette` (`recette_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `OCPizza`.`Commande_Pizzeria`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Commande_Pizzeria` (
  `command_id` INT NOT NULL,
  `pizzeria_id` INT NOT NULL,
  INDEX `fk_Commande_has_Pizzeria_Pizzeria1_idx` (`pizzeria_id` ASC) VISIBLE,
  INDEX `fk_Commande_has_Pizzeria_Commande1_idx` (`command_id` ASC) VISIBLE,
  PRIMARY KEY (`command_id`, `pizzeria_id`),
  CONSTRAINT `fk_Commande_has_Pizzeria_Commande1`
    FOREIGN KEY (`command_id`)
    REFERENCES `OCPizza`.`Commande` (`command_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Commande_has_Pizzeria_Pizzeria1`
    FOREIGN KEY (`pizzeria_id`)
    REFERENCES `OCPizza`.`Pizzeria` (`pizzeria_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `OCPizza`.`Utilisateur_Adresse`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `OCPizza`.`Utilisateur_Adresse` (
  `utilisateur_id` INT NOT NULL,
  `adress_id` INT NOT NULL,
  PRIMARY KEY (`utilisateur_id`, `adress_id`),
  INDEX `fk_Utilisateur_has_Adresse_Adresse1_idx` (`adress_id` ASC) VISIBLE,
  INDEX `fk_Utilisateur_has_Adresse_Utilisateur1_idx` (`utilisateur_id` ASC) VISIBLE,
  CONSTRAINT `fk_Utilisateur_has_Adresse_Utilisateur1`
    FOREIGN KEY (`utilisateur_id`)
    REFERENCES `OCPizza`.`Utilisateur` (`utilisateur_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Utilisateur_has_Adresse_Adresse1`
    FOREIGN KEY (`adress_id`)
    REFERENCES `OCPizza`.`Adresse` (`adress_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
